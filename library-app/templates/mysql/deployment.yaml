{{- if .Values.mysql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "library-app.fullname" . }}-mysql
  namespace: {{ include "library-app.namespace" . }}
  labels:
    {{- include "library-app.labels" . | nindent 4 }}
    component: mysql
spec:
  replicas: {{ .Values.mysql.replicas }}
  selector:
    matchLabels:
      {{- include "library-app.selectorLabels" . | nindent 6 }}
      component: mysql
  template:
    metadata:
      labels:
        {{- include "library-app.selectorLabels" . | nindent 8 }}
        component: mysql
    spec:
      containers:
      - name: mysql
        image: {{ .Values.mysql.image }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "library-app.fullname" . }}-mysql
              key: root-password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: {{ include "library-app.fullname" . }}-mysql
              key: database
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
            - -uroot
            - -proot
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 10
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
            - -uroot
            - -proot
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -uroot -p${MYSQL_ROOT_PASSWORD}"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -uroot -p${MYSQL_ROOT_PASSWORD}"
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: {{ include "library-app.fullname" . }}-mysql-pvc
{{- end }}