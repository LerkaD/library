version: '3'
vars:
  compose_file: "docker-compose.dev.yml"
tasks:

  build:
    desc: "Build Docker-images"
    cmds:
      - docker-compose -f {{.compose_file}} build

  build-nc:
    desc: "Build Docker-images"
    cmds:
      - docker-compose -f {{.compose_file}} build --no-cache

  start:
    desc: "Run all servises (detached mode)"
    cmds:
      - docker-compose -f {{.compose_file}} up

  stop:
    desc: "Stop all running containers from docker-compose"
    cmds:
      - docker-compose -f {{.compose_file}} down

  restart:
    desc: "Restart library manager"
    cmds:
      - task: stop
      - task: build
      - task: start

  shell-django:
    desc: "Bash terminal django"
    cmds:
      - docker-compose -f {{.compose_file}} exec django /bin/bash

  test-parallel:
    desc: "Ran pallel tests"
    cmds:
      - docker-compose -f {{.compose_file}} exec django poetry run python manage.py test --parallel 2

  logs:
    desc: "Check logs"
    vars:
      container_name: "django"
    cmds:
      - docker-compose logs -f {{.container_name}}

  check-lint:
    desc: "Check lint"
    cmds:
      - npm --prefix ./frontend run lint

  check-prietter:
    desc: "Check prietter"
    cmds:
      - npm --prefix ./frontend run prietter

  run-front:
    ddocker-compose -f docker-compose.dev.yml upesc: "Run frontend"
    cmds:
      - docker compose run --service-ports nextjs

  curl:
    desc: Curl request from frontend to backend(when docker compose up)
    cmds:
      - docker exec - it frontend bash
      - curl -i http://django:8000/api/authors/

  test:
    desc: Run tests
    cmds:
      - npm --prefix ./frontend run test
