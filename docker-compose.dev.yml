x-environment: &db_env
  DATABASE_HOST: db_lib
  DATABASE_NAME: lib_db
  DATABASE_USER: root
  DATABASE_PASSWORD: root
  DJANGO_SETTINGS_MODULE: backend.settings

services:
  db_lib:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: lib_db
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost -u root -proot" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 15s
    restart: always

  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  django:
    build:
      context: ./back
      dockerfile: Dockerfile
    volumes:
      - ./back:/app
    ports:
      - "8000:8000"
    environment:
      <<: *db_env
      WATCHMAN: "true"
      DJANGO_DEBUG: "true"
    depends_on:
      db_lib:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000 &&
             python manage.py load_genres &&
             python manage.py load_sample_data"

  nextjs:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app_parent/app
      - /app_parent/app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=/api
      - WATCHPACK_POLLING=true
      - INTERNAL_API_URL=http://django:8000/api
    depends_on:
      - django

  nginx:
    image: nginx:alpine
    ports:
      - "5500:5500"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - django
      - nextjs
    restart: unless-stopped

volumes:
  db_data:
